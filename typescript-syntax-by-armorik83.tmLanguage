<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>comment</key>
    <string>TypeScript Syntax by armorik83: version 2.0.2 (2)</string>
    <key>fileTypes</key>
    <array>
        <string>ts</string>
        <string>str</string>
    </array>
    <key>name</key>
    <string>TypeScript</string>
    <key>patterns</key>
    <array>
        <dict>
            <key>include</key>
            <string>#reference</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#always</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#module-decl-exception</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#module-decl</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#outlines</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#spilled</string>
        </dict>
    </array>
    <key>repository</key>
    <dict>
        <key>accessor-set</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#methodcall-accessor</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-accessor</string>
                </dict>
            </array>
        </dict>
        <key>always</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#use-strict</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#special-extension-angularjs</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#comment-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#string-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#language-keyword</string>
                </dict>
            </array>
        </dict>
        <key>brace-round</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>(\()</string>
                    <key>name</key>
                    <string>meta.brace.round.begin.ts</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>(\))</string>
                    <key>name</key>
                    <string>meta.brace.round.end.ts</string>
                </dict>
            </array>
        </dict>
        <key>brace-square</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>(\[)</string>
                    <key>name</key>
                    <string>meta.brace.square.begin.ts</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>(\])</string>
                    <key>name</key>
                    <string>meta.brace.square.end.ts</string>
                </dict>
            </array>
        </dict>
        <key>call-args-bracket</key>
        <dict>
            <key>begin</key>
            <string>(\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>object.method(inside)</string>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.function.args.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#object-bracket-in-call-args</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
            </array>
        </dict>
        <key>casting-bracket</key>
        <dict>
            <key>begin</key>
            <string>(?&lt;==|=\s|\(|\(\s|:\s|:|return\s|,|,\s)(&lt;)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.angle.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>= &lt;casting&gt;</string>
            <key>end</key>
            <string>(&gt;)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.angle.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.object.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-inside</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>class-decl</key>
        <dict>
            <key>begin</key>
            <string>\b(?:(declare|export)\s+)*(class)\b</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>declare class</string>
            <key>end</key>
            <string>(})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.class.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class-extends</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class-specify</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class-impl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>class-extends</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.extends.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.other.inherited-class.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>extends SuperClassName</string>
            <key>match</key>
            <string>\b(extends)\s+([a-zA-Z0-9_?.$][\w?.$]*)\b</string>
        </dict>
        <key>class-impl</key>
        <dict>
            <key>begin</key>
            <string>({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=})</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#constructor-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class-method-decl-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>class-method-accessor</key>
        <dict>
            <key>begin</key>
            <string>\b((get|set)\s+([a-zA-Z0-9_?$][\w?$]*))\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.ts</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>get func(){}, set func(){}</string>
            <key>end</key>
            <string>(})|(;)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.terminator.statement.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.function.class.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-decl-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>class-method-decl</key>
        <dict>
            <key>begin</key>
            <string>\b(?:(declare)\s+)*(?:((public)|(private))\s+)*([a-zA-Z0-9_$][\w_$]*)\s*(?=\(|&lt;)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>public method(args){impl}</string>
            <key>end</key>
            <string>(})|(;)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.terminator.statement.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.function.class.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-decl-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>class-method-decl-set</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#class-method-accessor</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class-method-decl-static</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class-method-decl</string>
                </dict>
            </array>
        </dict>
        <key>class-method-decl-static</key>
        <dict>
            <key>begin</key>
            <string>\b(?:(declare)\s+)*(?:(?:(?:(public)\s+(static))|(?:(private)\s+(static))|(static))\s+)*([a-zA-Z0-9_$][\w_$]*)\s*(?=\(|&lt;)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.static.ts</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.static.ts</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.static.ts</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>public method(args){impl}</string>
            <key>end</key>
            <string>(})|(;)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.terminator.statement.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.function.class.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-decl-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>class-specify</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.type.class.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>ClassName</string>
            <key>match</key>
            <string>\b([a-zA-Z0-9_?.$][\w?.$]*)\b</string>
        </dict>
        <key>comment-block</key>
        <dict>
            <key>begin</key>
            <string>/\*</string>
            <key>comment</key>
            <string>/* comment */</string>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.ts</string>
        </dict>
        <key>comment-line-double</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>// comment</string>
            <key>match</key>
            <string>(//).*?$</string>
            <key>name</key>
            <string>comment.line.double-slash.ts</string>
        </dict>
        <key>comment-set</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#documentation</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#comment-block</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#comment-line-double</string>
                </dict>
            </array>
        </dict>
        <key>constructor-decl</key>
        <dict>
            <key>begin</key>
            <string>\b(constructor)(?=\s*\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.constructor.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>constructor(args){impl}</string>
            <key>end</key>
            <string>(})|(;)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.terminator.statement.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.function.constructor.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-decl-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>control-condition-bracket</key>
        <dict>
            <key>begin</key>
            <string>(\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>if()</string>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.function.params.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
            </array>
        </dict>
        <key>control-impl</key>
        <dict>
            <key>begin</key>
            <string>({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=})</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
            </array>
        </dict>
        <key>control-set</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#control-with-condition-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#control-wo-condition-decl</string>
                </dict>
            </array>
        </dict>
        <key>control-with-condition-decl</key>
        <dict>
            <key>begin</key>
            <string>\b(if|else\sif|for|while|switch|catch)\b(?=\s*\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>if () {}, for () {}</string>
            <key>end</key>
            <string>(})|(?&lt;=;)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.control.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#control-condition-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#control-impl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>control-wo-condition-decl</key>
        <dict>
            <key>begin</key>
            <string>\b(else|do|try|finally)\b(?=\s*[{\w])</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>else {}</string>
            <key>end</key>
            <string>(})|(?&lt;=;)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.control.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#control-impl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>doc-keywords</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.documentation.ts</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(@.+?)\s</string>
        </dict>
        <key>documentation</key>
        <dict>
            <key>begin</key>
            <string>/\*\*</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>/** document @keyword description */</string>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.documentation.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#doc-keywords</string>
                </dict>
            </array>
        </dict>
        <key>enum-decl</key>
        <dict>
            <key>begin</key>
            <string>\b(enum)\b</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>enum</string>
            <key>end</key>
            <string>(})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.enum.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#enum-specify</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#enum-impl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>enum-impl</key>
        <dict>
            <key>begin</key>
            <string>({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=})</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>enum-specify</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.type.enum.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>ClassName</string>
            <key>match</key>
            <string>\b([a-zA-Z0-9_?.$][\w?.$]*)\b</string>
        </dict>
        <key>function-available-inside</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#support</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#casting-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#object-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#control-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#ternary</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-literal-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#new-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-call</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#variable-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>function-call</key>
        <dict>
            <key>begin</key>
            <string>(?:(\bsuper)|(\bthrow)|([a-zA-Z0-9_\$][\w_$]*))(?=\(|&lt;)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.variable.super.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.throw.ts</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.name.function.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>e.g. function();</string>
            <key>end</key>
            <string>(?=;|\.|\[|\s|\)|}|\])</string>
            <key>name</key>
            <string>meta.function.calling.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#call-args-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>function-decl</key>
        <dict>
            <key>begin</key>
            <string>\b(?:(declare|export)\s+)*(?:(function)|(static))\s+([a-zA-Z0-9_$][\w_$]*)\s*(?=\(|&lt;)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.function.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.static.ts</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.ts</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>function func(params){impl}</string>
            <key>end</key>
            <string>(})|(;)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.terminator.statement.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.function.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-decl-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>function-decl-set</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#function-params-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-return-type-object</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-return-type-function</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-return-type</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-impl</string>
                </dict>
            </array>
        </dict>
        <key>function-impl</key>
        <dict>
            <key>begin</key>
            <string>({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=})</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
            </array>
        </dict>
        <key>function-literal-arrow-decl</key>
        <dict>
            <key>begin</key>
            <string>(?:(?&lt;=,|:|\(|=|\*/)\s*(?=\(.*\)\s*=&gt;))|(?:(?&lt;=return)\s*(?=\(.*\)\s*=&gt;))</string>
            <key>comment</key>
            <string>var f = (params) =&gt; {impl}</string>
            <key>end</key>
            <string>(})|(?&lt;=,|;)|(?=\);)|(?=\)\))</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.function.literal.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#global-function-arrow</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-decl-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>function-literal-decl</key>
        <dict>
            <key>begin</key>
            <string>(function)\s*(?=\(.*\)\s*(:.*)*\s*{)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>var f = function(params){impl}</string>
            <key>end</key>
            <string>(})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.function.literal.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-decl-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>function-literal-set</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#function-literal-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-literal-arrow-decl</string>
                </dict>
            </array>
        </dict>
        <key>function-params-bracket</key>
        <dict>
            <key>begin</key>
            <string>(\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>func()</string>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.function.params.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#function-params-inside</string>
                </dict>
            </array>
        </dict>
        <key>function-params-inside</key>
        <dict>
            <key>comment</key>
            <string>(param: type, param, type)</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#variable-args</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-decl</string>
                </dict>
            </array>
        </dict>
        <key>function-return-type</key>
        <dict>
            <key>begin</key>
            <string>(:)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.type.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?={|;)</string>
            <key>name</key>
            <string>meta.type.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#global-type-common</string>
                </dict>
            </array>
        </dict>
        <key>function-return-type-function</key>
        <dict>
            <key>begin</key>
            <string>(:)(?=\s*\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.type.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?={\s*$)</string>
            <key>name</key>
            <string>meta.type.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#type-function-set</string>
                </dict>
            </array>
        </dict>
        <key>function-return-type-object</key>
        <dict>
            <key>begin</key>
            <string>(:)(?=\s*{)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.type.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?={\s*$)</string>
            <key>name</key>
            <string>meta.type.object.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#type-object-impl</string>
                </dict>
            </array>
        </dict>
        <key>generic-bracket</key>
        <dict>
            <key>begin</key>
            <string>(&lt;)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.angle.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>&lt;&gt;</string>
            <key>end</key>
            <string>(&gt;)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.angle.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.generic.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-inside</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>generic-extends</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.extends.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>Super</string>
            <key>match</key>
            <string>(extends)\s+</string>
        </dict>
        <key>generic-inside</key>
        <dict>
            <key>comment</key>
            <string>&lt;Generic extends Super&gt;</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#type-new</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#type-function-conditions</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#type-object-impl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-extends</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#global-type-common</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>global-function-arrow</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.function.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>()=&gt;{}</string>
            <key>match</key>
            <string>\s*(=&gt;)\s*</string>
        </dict>
        <key>global-type-common</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.function.type.any.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.function.type.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>Type</string>
            <key>match</key>
            <string>(?:(any)|([a-zA-Z0-9_?.$][\w?.$]*))</string>
        </dict>
        <key>interface-decl</key>
        <dict>
            <key>begin</key>
            <string>\b(?:(declare|export)\s+)*(interface)\b</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>declare interface</string>
            <key>end</key>
            <string>(})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.interface.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#interface-extends</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#interface-specify</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#interface-impl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>interface-extends</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.extends.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.other.inherited-class.interface.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>extends SuperName</string>
            <key>match</key>
            <string>\b(extends)\s+([a-zA-Z0-9_?.$][\w?.$]*)\b</string>
        </dict>
        <key>interface-impl</key>
        <dict>
            <key>begin</key>
            <string>({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=})</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>interface-specify</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.type.class.interface.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>InterfaceName</string>
            <key>match</key>
            <string>\b([a-zA-Z0-9_?.$][\w?.$]*)\b</string>
        </dict>
        <key>keyword-control</key>
        <dict>
            <key>match</key>
            <string>\b(case|break|continue|default)\b</string>
            <key>name</key>
            <string>keyword.control.ts</string>
        </dict>
        <key>keyword-false</key>
        <dict>
            <key>match</key>
            <string>\b(false)\b</string>
            <key>name</key>
            <string>constant.language.boolean.false.ts </string>
        </dict>
        <key>keyword-instanceof</key>
        <dict>
            <key>match</key>
            <string>\b(instanceof)\b</string>
            <key>name</key>
            <string>keyword.operator.instanceof.ts</string>
        </dict>
        <key>keyword-nan</key>
        <dict>
            <key>match</key>
            <string>\b(NaN)\b</string>
            <key>name</key>
            <string>constant.language.nan.ts</string>
        </dict>
        <key>keyword-null</key>
        <dict>
            <key>match</key>
            <string>\b(null)\b</string>
            <key>name</key>
            <string>constant.language.null.ts</string>
        </dict>
        <key>keyword-operator</key>
        <dict>
            <key>match</key>
            <string>\b(delete|in)\b</string>
            <key>name</key>
            <string>keyword.operator.ts</string>
        </dict>
        <key>keyword-reserved</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.ts</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.ts</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.ts</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.ts</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.ts</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.ts</string>
                </dict>
            </dict>
            <key>match</key>
            <string>\b(?:(debugger)|(implements)|(protected)|(yield)|(let)|(package)|(const))\b</string>
        </dict>
        <key>keyword-return</key>
        <dict>
            <key>match</key>
            <string>\b(return)\b</string>
            <key>name</key>
            <string>keyword.control.return.ts</string>
        </dict>
        <key>keyword-this</key>
        <dict>
            <key>match</key>
            <string>\b(this)\b</string>
            <key>name</key>
            <string>variable.language.this.ts</string>
        </dict>
        <key>keyword-throw</key>
        <dict>
            <key>match</key>
            <string>\b(throw)\b</string>
            <key>name</key>
            <string>keyword.control.throw.ts</string>
        </dict>
        <key>keyword-true</key>
        <dict>
            <key>match</key>
            <string>\b(true)\b</string>
            <key>name</key>
            <string>constant.language.boolean.true.ts</string>
        </dict>
        <key>keyword-typeof</key>
        <dict>
            <key>match</key>
            <string>\b(typeof)\b</string>
            <key>name</key>
            <string>keyword.operator.typeof.ts</string>
        </dict>
        <key>keyword-undefined</key>
        <dict>
            <key>match</key>
            <string>\b(undefined)\b</string>
            <key>name</key>
            <string>constant.language.undefined.ts</string>
        </dict>
        <key>keyword-void</key>
        <dict>
            <key>match</key>
            <string>\b(void)\b</string>
            <key>name</key>
            <string>storage.type.ts</string>
        </dict>
        <key>language</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#language-numbers</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#language-operator</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#language-keyword</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#language-brace</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#language-terminator</string>
                </dict>
            </array>
        </dict>
        <key>language-brace</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#brace-square</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#brace-round</string>
                </dict>
            </array>
        </dict>
        <key>language-keyword</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#keyword-this</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-true</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-false</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-null</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-undefined</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-nan</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-operator</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-instanceof</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-typeof</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-throw</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-control</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-return</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-void</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-reserved</string>
                </dict>
            </array>
        </dict>
        <key>language-numbers</key>
        <dict>
            <key>match</key>
            <string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
            <key>name</key>
            <string>constant.numeric.ts</string>
        </dict>
        <key>language-operator</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#operator-logical</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#operator-zerofill-rightshift-assignment</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#operator-bitwise</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#operator-comparison</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#operator-not-concat</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#operator-concat</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#operator-arithmetic</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#operator-increment-decrement</string>
                </dict>
            </array>
        </dict>
        <key>language-terminator</key>
        <dict>
            <key>match</key>
            <string>(;)</string>
            <key>name</key>
            <string>punctuation.terminator.statement.ts</string>
        </dict>
        <key>methodcall-accessor</key>
        <dict>
            <key>begin</key>
            <string>(\.)(?=[a-zA-Z0-9_$][\w_$]*[\(&lt;])</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.delimiter.method.period.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=;|\.|\[|\s|\)|\]|}|\+)</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#call-args-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#methodcall-notation</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>methodcall-notation</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.function.call.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>object.method()</string>
            <key>match</key>
            <string>([a-zA-Z0-9_$][\w_$]*)</string>
        </dict>
        <key>module-decl</key>
        <dict>
            <key>begin</key>
            <string>\b(?:(declare)\s+)*(module)\b\s*(\")*([a-zA-Z0-9_?.$][\w?.$]*)(\")*</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.ts</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.ts</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.function.name.module.ts</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>declare module Module.Name {}</string>
            <key>end</key>
            <string>(})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.module.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#module-impl</string>
                </dict>
            </array>
        </dict>
        <key>module-decl-exception</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.name.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>module.foo = is not module modifier</string>
            <key>match</key>
            <string>\b(module)(?=\..*=)</string>
            <key>name</key>
            <string>meta.variable.ts</string>
        </dict>
        <key>module-impl</key>
        <dict>
            <key>begin</key>
            <string>({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=})</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#module-decl-exception</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#module-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#outlines</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>new-decl</key>
        <dict>
            <key>begin</key>
            <string>\b(new)\b(?=\s+\w)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.new.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>new Class(args);</string>
            <key>end</key>
            <string>(?=;|\)|\}|,|\]|\.|\n|\r)</string>
            <key>name</key>
            <string>meta.function.new.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#global-type-common</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#call-args-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>object-bracket</key>
        <dict>
            <key>begin</key>
            <string>(?&lt;==|\(|:|return\s|,|[\w_$]&gt;)\s*({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>= {key: value, key: value};</string>
            <key>end</key>
            <string>(})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.object.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#object-value</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#object-key</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>object-bracket-in-brace-square</key>
        <dict>
            <key>begin</key>
            <string>({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>[{key: value}, {key: value}]</string>
            <key>end</key>
            <string>(})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.object.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#object-value</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#object-key</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>object-bracket-in-call-args</key>
        <dict>
            <key>begin</key>
            <string>({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>({key: value}, {key: value})</string>
            <key>end</key>
            <string>(})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.object.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#object-value</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#object-key</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>object-key</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.object.ts</string>
                </dict>
            </dict>
            <key>match</key>
            <string>([\w_$]+)\s*(?=:)</string>
        </dict>
        <key>object-value</key>
        <dict>
            <key>begin</key>
            <string>(:)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.object.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=;|=|}|,|\))|(?:(?&lt;=,)(\s))</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
            </array>
        </dict>
        <key>operator-arithmetic</key>
        <dict>
            <key>match</key>
            <string>(\-|\+|\*|/|%)</string>
            <key>name</key>
            <string>keyword.operator.arithmetic.ts</string>
        </dict>
        <key>operator-bitwise</key>
        <dict>
            <key>match</key>
            <string>&lt;&lt;|&gt;&gt;|&gt;&gt;&gt;|~|\^|&amp;|\|</string>
            <key>name</key>
            <string>keyword.operator.bitwise.ts</string>
        </dict>
        <key>operator-comparison</key>
        <dict>
            <key>match</key>
            <string>(===|==|!==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
            <key>name</key>
            <string>keyword.operator.comparison.ts</string>
        </dict>
        <key>operator-concat</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.string.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>String+String concat</string>
            <key>match</key>
            <string>(?&lt;=[\"'a-zA-Z0-9_?$\)])(\+)</string>
        </dict>
        <key>operator-increment-decrement</key>
        <dict>
            <key>match</key>
            <string>(\-\-|\+\+)</string>
            <key>name</key>
            <string>keyword.operator.increment-decrement.ts</string>
        </dict>
        <key>operator-logical</key>
        <dict>
            <key>match</key>
            <string>!|&amp;&amp;|\|\|</string>
            <key>name</key>
            <string>keyword.operator.logical.ts</string>
        </dict>
        <key>operator-not-concat</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.increment-decrement.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>e.g. i++ (Not string)</string>
            <key>match</key>
            <string>(?&lt;=[\"'a-zA-Z0-9_?$\)])(\+\+)</string>
        </dict>
        <key>operator-zerofill-rightshift-assignment</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.bitwise.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.assignment.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>&gt;&gt;&gt;=</string>
            <key>match</key>
            <string>(&gt;&gt;&gt;)(=)</string>
        </dict>
        <key>outlines</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#interface-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#enum-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
            </array>
        </dict>
        <key>property-access-modifier</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.static.ts</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.static.ts</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.static.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>{commonProperty: type}</string>
            <key>match</key>
            <string>\b(?:(public)|(private)|(static)|(public)\s+(static)|(private)\s+(static))\s+</string>
        </dict>
        <key>property-accessor</key>
        <dict>
            <key>begin</key>
            <string>(\.)(?=[a-zA-Z0-9_?$])</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.delimiter.method.period.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=;|\.|\[|\]|\)|}|\s|\+)</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-prototype</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-notation</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>property-bracket</key>
        <dict>
            <key>begin</key>
            <string>(?&lt;=[\w$]|:|:\s|\(|\(\s|=|=\s)(\[)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.square.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>object[property]</string>
            <key>end</key>
            <string>(\])</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.square.begin.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.property.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#object-bracket-in-brace-square</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
            </array>
        </dict>
        <key>property-common</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.name.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>{commonProperty: type}</string>
            <key>match</key>
            <string>\b([a-zA-Z0-9_$][\w_$]*)\b</string>
        </dict>
        <key>property-decl</key>
        <dict>
            <key>comment</key>
            <string>class or interface {property: type}</string>
            <key>name</key>
            <string>meta.property.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-new</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-access-modifier</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-optional</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-function</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-common</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#type</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>property-function</key>
        <dict>
            <key>begin</key>
            <string>\b([a-zA-Z0-9_$][\w_$]*)(\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.name.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>{functionProperty(): type}</string>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.end.ts</string>
                </dict>
            </dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#function-params-inside</string>
                </dict>
            </array>
        </dict>
        <key>property-new</key>
        <dict>
            <key>match</key>
            <string>\b(new)\b</string>
            <key>name</key>
            <string>keyword.operator.new.ts</string>
        </dict>
        <key>property-notation</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>variable.other.property.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>object.property</string>
            <key>match</key>
            <string>([a-zA-Z0-9_$][\w_$]*)</string>
        </dict>
        <key>property-optional</key>
        <dict>
            <key>match</key>
            <string>\?</string>
            <key>name</key>
            <string>keyword.operator.optional.ts</string>
        </dict>
        <key>property-prototype</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>support.constant.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>object.prototype</string>
            <key>match</key>
            <string>(prototype)</string>
            <key>name</key>
            <string>meta.function.prototype.ts</string>
        </dict>
        <key>reference</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.reference.comment.ts</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.ts</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>string.quoted.double.ts</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.ts</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.ts</string>
                </dict>
                <key>8</key>
                <dict>
                    <key>name</key>
                    <string>string.quoted.single.ts</string>
                </dict>
                <key>9</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>/// &lt;reference path=.../&gt;</string>
            <key>match</key>
            <string>(///)\s*&lt;reference\spath.*=.*(?:((")(.*)("))|((')(.*)(')))\s*/*&gt;(\s)</string>
            <key>name</key>
            <string>comment.line.triple-slash.ts</string>
        </dict>
        <key>special-extension</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#special-extension-jquery</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#special-extension-underscorejs</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#special-extension-angularjs</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#special-extension-requirejs</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>\b(_this|self)\b</string>
                    <key>name</key>
                    <string>variable.language.this.myself.ts</string>
                </dict>
            </array>
        </dict>
        <key>special-extension-angularjs</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>\b(angular)\b</string>
                    <key>name</key>
                    <string>support.class.angularjs.ts</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>\$scope</string>
                    <key>name</key>
                    <string>support.class.angularjs.ts</string>
                </dict>
                <dict>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>variable.language.this.ts</string>
                        </dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>meta.delimiter.method.period.ts</string>
                        </dict>
                        <key>3</key>
                        <dict>
                            <key>name</key>
                            <string>support.class.angularjs.ts</string>
                        </dict>
                    </dict>
                    <key>match</key>
                    <string>\b(this)(\.)(scope)</string>
                </dict>
            </array>
        </dict>
        <key>special-extension-jquery</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>(\$)(?=\.)</string>
                    <key>name</key>
                    <string>support.class.jquery.ts</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>(?i)\b(jQuery)(?=\.)</string>
                    <key>name</key>
                    <string>support.class.jquery.ts</string>
                </dict>
                <dict>
                    <key>begin</key>
                    <string>(?i)(\.)*(\$|jQuery)(\()</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>meta.delimiter.method.period.ts</string>
                        </dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>support.class.jquery.ts</string>
                        </dict>
                        <key>3</key>
                        <dict>
                            <key>name</key>
                            <string>meta.brace.round.begin.ts</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>(\))</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>meta.brace.round.end.ts</string>
                        </dict>
                    </dict>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#function-include</string>
                        </dict>
                        <dict>
                            <key>include</key>
                            <string>$self</string>
                        </dict>
                    </array>
                </dict>
            </array>
        </dict>
        <key>special-extension-requirejs</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>begin</key>
                    <string>\b(require)(\()</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>support.class.requirejs.ts</string>
                        </dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>meta.brace.round.begin.ts</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>(\))</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>meta.brace.round.end.ts</string>
                        </dict>
                    </dict>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#function-include</string>
                        </dict>
                        <dict>
                            <key>include</key>
                            <string>$self</string>
                        </dict>
                    </array>
                </dict>
            </array>
        </dict>
        <key>special-extension-underscorejs</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>(_)(?=\.)</string>
                    <key>name</key>
                    <string>support.class.underscorejs.ts</string>
                </dict>
                <dict>
                    <key>begin</key>
                    <string>(\.)*(_)(\()</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>meta.delimiter.method.period.ts</string>
                        </dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>support.class.underscorejs.ts</string>
                        </dict>
                        <key>3</key>
                        <dict>
                            <key>name</key>
                            <string>meta.brace.round.begin.ts</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>(\))</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>meta.brace.round.end.ts</string>
                        </dict>
                    </dict>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#function-include</string>
                        </dict>
                        <dict>
                            <key>include</key>
                            <string>$self</string>
                        </dict>
                    </array>
                </dict>
            </array>
        </dict>
        <key>spilled</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#global-function-arrow</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#accessor-set</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#language</string>
                </dict>
            </array>
        </dict>
        <key>string-double-quoted</key>
        <dict>
            <key>begin</key>
            <string>\"</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>single quoted 'string'</string>
            <key>end</key>
            <string>\"</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.double.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#string-escape</string>
                </dict>
            </array>
        </dict>
        <key>string-escape</key>
        <dict>
            <key>match</key>
            <string>\\.</string>
            <key>name</key>
            <string>constant.character.escape.ts</string>
        </dict>
        <key>string-regexp</key>
        <dict>
            <key>begin</key>
            <string>(?&lt;==|\()\s*(/)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>single quoted 'string'</string>
            <key>end</key>
            <string>(/)([gimy]{,4})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.regex.flags.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>string.regexp.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#unicode-characters</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#string-escape</string>
                </dict>
            </array>
        </dict>
        <key>string-set</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#string-single-quoted</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#string-double-quoted</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#string-regexp</string>
                </dict>
            </array>
        </dict>
        <key>string-single-quoted</key>
        <dict>
            <key>begin</key>
            <string>'</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>single quoted 'string'</string>
            <key>end</key>
            <string>'</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.single.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#string-escape</string>
                </dict>
            </array>
        </dict>
        <key>support</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#support-object</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#support-class</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#special-extension</string>
                </dict>
            </array>
        </dict>
        <key>support-class</key>
        <dict>
            <key>match</key>
            <string>(?:)\b(Date|Math|Number|String)\b</string>
            <key>name</key>
            <string>support.class.ts </string>
        </dict>
        <key>support-object</key>
        <dict>
            <key>match</key>
            <string>\b(console|event|document|history|location|window)\b</string>
            <key>name</key>
            <string>support.object.ts </string>
        </dict>
        <key>ternary</key>
        <dict>
            <key>begin</key>
            <string>(\?)</string>
            <key>comment</key>
            <string>? : ;</string>
            <key>end</key>
            <string>(;)|(?=\))</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.terminator.statement.ts</string>
                </dict>
            </dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-available-inside</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>type</key>
        <dict>
            <key>begin</key>
            <string>(:)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.type.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=;|=|}|,|\)|\n)</string>
            <key>name</key>
            <string>meta.type.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#keyword-typeof</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#type-new</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#generic-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#type-object-impl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#type-function-conditions</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#global-type-common</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>type-function-conditions</key>
        <dict>
            <key>begin</key>
            <string>(?=\()</string>
            <key>end</key>
            <string>(?=:|;|}|,|\)|&gt;)</string>
            <key>name</key>
            <string>meta.type.function.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#type-function-set</string>
                </dict>
            </array>
        </dict>
        <key>type-function-impl</key>
        <dict>
            <key>begin</key>
            <string>({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>type-function-params-bracket</key>
        <dict>
            <key>begin</key>
            <string>(\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.begin.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.type.function.args.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#function-params-inside</string>
                </dict>
            </array>
        </dict>
        <key>type-function-set</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#global-function-arrow</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#type-function-params-bracket</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#type-function-impl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#global-type-common</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>type-new</key>
        <dict>
            <key>match</key>
            <string>\b(new)\b</string>
            <key>name</key>
            <string>keyword.operator.new.ts</string>
        </dict>
        <key>type-object-impl</key>
        <dict>
            <key>begin</key>
            <string>({)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.begin.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(})</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.end.ts</string>
                </dict>
            </dict>
            <key>name</key>
            <string>meta.type.object.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#property-decl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>unicode-characters</key>
        <dict>
            <key>match</key>
            <string>\\u[0-9a-fA-F]{4}</string>
            <key>name</key>
            <string>constant.character.unicode.ts</string>
        </dict>
        <key>use-strict</key>
        <dict>
            <key>match</key>
            <string>(\"use strict\")|('use strict')</string>
            <key>name</key>
            <string>storage.modifier.strict.ts</string>
        </dict>
        <key>variable-args</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.ts</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(\.\.\.)</string>
        </dict>
        <key>variable-decl</key>
        <dict>
            <key>begin</key>
            <string>(?:(declare|export)\s+)*(?:(var)|(static)|(import))</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.variable.ts</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.static.ts</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.ts</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(?=;|=|\bin\b)|\n</string>
            <key>name</key>
            <string>meta.variable.ts</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#always</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#type</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#variable-specify</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#spilled</string>
                </dict>
            </array>
        </dict>
        <key>variable-specify</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.name.ts</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>var</string>
            <key>match</key>
            <string>([a-zA-Z0-9_$][\w_$]*)\s*(?==)</string>
        </dict>
    </dict>
    <key>scopeName</key>
    <string>source.ts</string>
    <key>uuid</key>
    <string>1094d8a0-ab15-11e3-a5e2-0800200c9a66</string>
</dict>
</plist>
